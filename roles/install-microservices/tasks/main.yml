---

  - name: Stop/Removes microservice containers if running (Idempotence)
    docker:
      image: "{{item.image}}"
      state: absent
    with_items: dockerhub_microservices

  - name: Remove microservice images, if present, to avoid stale versions (Idempotence)
    docker_image: name="{{item.image}}" state=absent
    with_items: dockerhub_microservices

  - name: Launch Microservices
    docker:
      name: "{{item.name}}"
      image: "{{item.image}}"
      state: started
      ports: "{{item.ports}}"
      #restart_policy: "on-failure"
      env:
        # http://gliderlabs.com/registrator/latest/user/services/#detecting-services
        # https://github.com/gliderlabs/registrator/issues/132
        SERVICE_NAME: "{{item.name}}"
        SERVICE_TAGS: "microservices"
        SERVICE_CHECK_HTTP: "/healthcheck"
        SERVICE_CHECK_INTERVAL: "30s"
        SERVICE_CHECK_TIMEOUT: "5s"
    with_items: dockerhub_microservices
