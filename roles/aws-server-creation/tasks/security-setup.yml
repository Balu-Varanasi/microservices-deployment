---

- name: "{{ project_name }} Web Security Group"
  ec2_group:
    profile: "{{ aws_profile }}"
    name: "{{ aws_security_group_web }}"
    description: "security group for web servers"
    purge_rules: true
    region: "{{ aws_region }}"
    vpc_id: "{{ vpc_settings['vpc_id'] }}"
    rules:
      - proto: tcp
        from_port: 80
        to_port: 80
        cidr_ip: "0.0.0.0/0"
      - proto: tcp
        from_port: 22
        to_port: 22
        cidr_ip: "0.0.0.0/0"
      - proto: tcp
        from_port: 443
        to_port: 443
        cidr_ip: "0.0.0.0/0"
      - proto: tcp
        from_port: 53
        to_port: 53
        cidr_ip: "0.0.0.0/0"

- name: "{{ project_name }} Microservices Security Group"
  ec2_group:
    profile: "{{ aws_profile }}"
    name: "{{ aws_security_group_services }}"
    description: "security group for microservices"
    purge_rules: true
    region: "{{ aws_region }}"
    vpc_id: "{{ vpc_settings['vpc_id'] }}"
    rules:
      - proto: tcp
        from_port: 1024
        to_port: 65000
        cidr_ip: "0.0.0.0/0"

- name: "{{ project_name }} CA Gateway Security Group"
  ec2_group:
    profile: "{{ aws_profile }}"
    name: "{{ aws_security_group_cagateway }}"
    description: "security group for CA Gateway"
    purge_rules: true
    region: "{{ aws_region }}"
    vpc_id: "{{ vpc_settings['vpc_id'] }}"
    rules:
      - proto: tcp
        from_port: 8443
        to_port: 8443
        cidr_ip: "0.0.0.0/0"
      - proto: tcp
        from_port: 8080
        to_port: 8080
        cidr_ip: "0.0.0.0/0"
      - proto: tcp
        from_port: 9443
        to_port: 9443
        cidr_ip: "0.0.0.0/0"
      - proto: tcp
        from_port: 2124
        to_port: 2124
        cidr_ip: "0.0.0.0/0"

- name: "{{ project_name }} DB Security Group"
  ec2_group:
    profile: "{{ aws_profile }}"
    name: "{{ aws_security_group_db }}"
    description: "security group for databases"
    purge_rules: true
    region: "{{ aws_region }}"
    vpc_id: "{{ vpc_settings['vpc_id'] }}"
    rules:
      - proto: tcp
        from_port: 3306
        to_port: 3306
        cidr_ip: "0.0.0.0/0"

- name: "{{ project_name }} Consul Security Group"
  ec2_group:
    profile: "{{ aws_profile }}"
    name: "{{ aws_security_group_consul }}"
    description: "security group for Consul servers"
    purge_rules: true
    region: "{{ aws_region }}"
    vpc_id: "{{ vpc_settings['vpc_id'] }}"
    rules:
      - proto: tcp
        from_port: 3000
        to_port: 3000
        cidr_ip: "{{ aws_consul_security_cidr_ip }}"
      - proto: tcp
        from_port: 5000
        to_port: 5000
        cidr_ip: "{{ aws_consul_security_cidr_ip }}"
      - proto: tcp
        from_port: 8300
        to_port: 8300
        cidr_ip: "{{ aws_consul_security_cidr_ip }}"
      - proto: tcp
        from_port: 8301
        to_port: 8301
        cidr_ip: "{{ aws_consul_security_cidr_ip }}"
      - proto: tcp
        from_port: 8302
        to_port: 8302
        cidr_ip: "{{ aws_consul_security_cidr_ip }}"
      - proto: tcp
        from_port: 8400
        to_port: 8400
        cidr_ip: "{{ aws_consul_security_cidr_ip }}"
      - proto: tcp
        from_port: 8500
        to_port: 8500
        cidr_ip: "{{ aws_consul_security_cidr_ip }}"
      - proto: tcp
        from_port: 8600
        to_port: 8600
        cidr_ip: "{{ aws_consul_security_cidr_ip }}"

      - proto: udp
        from_port: 53
        to_port: 53
        cidr_ip: "{{ aws_consul_security_cidr_ip }}"
      - proto: udp
        from_port: 8301
        to_port: 8301
        cidr_ip: "{{ aws_consul_security_cidr_ip }}"
      - proto: udp
        from_port: 8302
        to_port: 8302
        cidr_ip: "{{ aws_consul_security_cidr_ip }}"
      - proto: udp
        from_port: 8600
        to_port: 8600
        cidr_ip: "{{ aws_consul_security_cidr_ip }}"

# see: http://docs.ansible.com/ansible/playbooks_lookups.html#more-lookups
#- name: Setup security key (SSH key)
#  ec2_key:
#    name:"{{ aws_ssh_key_name }}"
#    key_material:"{{ lookup('file', './ssh/public-key.pem') }}"
#    state: present

- name: Setup security key (SSH key)
  ec2_key:
    profile: "{{ aws_profile }}"
    region: "{{ aws_region }}"
    name: "{{ aws_ssh_key_name }}"
    key_material: "{{ item }}"
  with_file: "ssh/public-key.pem"


