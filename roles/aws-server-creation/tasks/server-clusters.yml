---

# http://docs.ansible.com/ansible/ec2_module.html#requirements

- name: Launch Server Clusters
  ec2:
     profile: "{{ aws_profile }}"
     key_name: "{{ aws_ssh_key_name }}"
     group: "{{ item[0].groups }}"
     instance_type: "{{ aws_instance_type }}"
     image: "{{ aws_image }}"
     wait: true
     region: "{{ aws_region }}"
     vpc_subnet_id: "{{item[1]['id']}}"
     # assign_public_ip: "{{item[0].assign_public_ip}}"
     # Trick: create all servers with public_ips so we can easily configure them. We will take public
     # IPs away, later using http://docs.ansible.com/ansible/ec2_eip_module.html
     assign_public_ip: True
     instance_tags: "{{ item[0].tags }}"
     exact_count: "{{ item[0].exact_count }}"
     count_tag: "{{ item[0].tags }}"
     zone: "{{ item[0].zone }}"
  when: item[0]['tags']['subnet_tag'] == item[1]['resource_tags']['uid']
  with_nested:
    - "{{server_clusters}}"
    - "{{ vpc_settings['subnets'] }}"

- name: Launch Server Clusters
  debug: msg="item[0]['tags']['subnet_tag'] â€“ item[1]['resource_tags']['uid']"
  when: item[0]['tags']['subnet_tag'] == item[1]['resource_tags']['uid']
  with_nested:
    - "{{server_clusters}}"
    - "{{ vpc_settings['subnets'] }}"


#- name: created clusters
#  debug: var="{{ec2_consul_cluster}}"

#- name: Add new instance to host group
#  add_host: hostname={{ item.public_ip }} groupname=launched
#  with_items: ec2.instances

#- debug: msg="opa {{ ec2_consul_cluster }}"

